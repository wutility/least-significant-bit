!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).LSBSteganography={})}(this,(function(t){"use strict";t.LSBSteganography=class{static encode(t,e){const n=this.stringToBinary(e),i=n.length;if(i>.25*t.data.length)throw new Error("Message is too long to encode in this image");for(let e=0;e<i;e++){const i=4*e,r=this.decimalToBinary(t.data[i]).slice(0,-1)+n[e],a=parseInt(r,2);t.data[i]=a}return t}static decode(t){let e="",n=!1;for(let i=0;i<t.data.length;i+=4){if(e+=this.decimalToBinary(t.data[i]).slice(-1),e.endsWith("00000000")){n=!0;break}}if(!n)throw new Error("No null terminator found in image data");return this.binaryToString(e)}static decimalToBinary(t){return t.toString(2).padStart(8,"0")}static stringToBinary(t){let e="";for(let n=0;n<t.length;n++){e+=t.charCodeAt(n).toString(2).padStart(8,"0")}return e+="00000000",e}static binaryToString(t){let e="";for(let n=0;n<t.length;n+=8){const i=t.slice(n,n+8),r=parseInt(i,2);if(e+=String.fromCharCode(r),"00000000"===i)break}return e}}}));
